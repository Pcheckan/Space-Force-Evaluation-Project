@inject IDailyQuestionsData questionData

@*<button @onclick="@GenerateQuestion">Click to show your RaNdOmLy GeNeRaTeD qUeStIoN</button>*@

<div class=maincomponent>
    <p>Please answer the following question to the best of your ability</p>
    <h3>@preamble</h3>
    <h5>@TestQuestion</h5>

    <form class=mainclass id="dailyquestionform">

    <!--Radio button for responses-->
    <input type="radio" id="radioOne" name="value" value=1>
    <span>Strongly Disagree</span>
@*    <label for="radioOne">Strongly Disagree</label>*@

    <input type="radio" id="radioTwo" name="value" value=2>
    <span>Somewhat Disagree</span>
@*    <label for="radioTwo">Somewhat Disagree</label>*@

    <input type="radio" id="radioThree" name="value" value=3>
    <span>Neither Agree nor Disagree</span>
@*    <label for="radioThree">Neither Agree nor Disagree</label>*@

    <input type="radio" id="radioFour" name="value" value=4>
    <span>Somewhat Agree</span>
@*    <label for="radioFour">Somewhat Agree</label>*@

    <input type="radio" id="radioFive" name="value" value=5 >
    <span>Strongly Agree</span>
@*    <label for="radioFive">Strongly Agree</label>*@
    </form>

</div>

@code {

    public string TestQuestion = "";
    public string preamble = "";
    private Random rnd = new Random();

    // We will need a function to get the maximum number of questions from the question bank
    private int getMax()
    {
        return 13;
    }
    private int GetQuestionNumber()
    {
        return rnd.Next(1,getMax());
    }

    private async Task GenerateQuestion()
    {
        DailyQuestionsModel questionModel = await questionData.GetDailyQuestion(GetQuestionNumber());
        TestQuestion = questionModel.text;
        preamble = "This Question is in regards to one of your teammates";
    }

    protected override async Task OnInitializedAsync()
    {
        await GenerateQuestion();
    }
}
